
//====================  Detect 101 by FSM Code  =============================

`timescale 1ns/10ps
module 	det101(
		input clk, rst,
		input in,
		output reg out
			);
		parameter 	pS0_0 	= 4'b0001;
		parameter 	pS1_1 	= 4'b0010;
		parameter 	pS2_10 	= 4'b0100;
		parameter 	pS3_101 = 4'b1000;

		reg[3:0]	curSt_r, nxtSt_r;

		always@(posedge clk, posedge rst)begin
          	if(rst)	curSt_r <= #1 pS0_0;
			else	curSt_r <= #1 nxtSt_r;
			end

		always@(*)begin
			out = 1'b0;	//Avoid inferred latch
			case(curSt_r)
				pS0_0:begin
					if(!in) nxtSt_r = pS0_0;
					else	nxtSt_r = pS1_1;
					end		
				pS1_1:begin
                  	if(!in) nxtSt_r = pS2_10;
					else	nxtSt_r = pS1_1;
					end	
				pS2_10:begin
					if(!in) nxtSt_r = pS0_0;
					else begin
						out = 1'b1;
						nxtSt_r = pS3_101;
			        	end
					end
				pS3_101:begin
					if(!in) nxtSt_r = pS2_10;
					else	nxtSt_r = pS1_1;
					end
			endcase
		end
  
endmodule



//*************  Test Bench det101.v ***************************

`timescale 1ns/10ps 
`include "det101.v"

module tb_det101();
	reg seq_in;
	reg clock;
	reg reset;
	wire detect_out;

	det101 UUT (
      	.in(seq_in), 
		.clk(clock), 
		.rst(reset), 
		.out(detect_out)
    	); 
    
   initial begin
    	clock = 0;
  	end
  
  	always begin
     	#5  clock = 0;
     	#5  clock = 1;
  	end  *
  
 	initial begin 
		seq_in = 0;
		reset = 1;
		#30	reset = 0;
		#40	seq_in = 1;
		#10	seq_in = 0;
		#10	seq_in = 1; 
		#20	seq_in = 0; 
		#20 seq_in = 1; 
		#20	seq_in = 0; 
      
      	#30	reset = 1;
		#40	seq_in = 1;
		#10	seq_in = 0;
		#10	seq_in = 1; 
		#20	seq_in = 0; 
		#20 seq_in = 1; 
		#20	seq_in = 0; 
      
        #30	reset = 0;
		#40	seq_in = 1;
		#10	seq_in = 0;
		#10	seq_in = 1; 
		#20	seq_in = 0; 
		#20 seq_in = 1; 
		#20	seq_in = 0;
	end
  
	initial begin 
		$dumpfile("dump.vcd"); 
		$dumpvars; 
  	end 
endmodule

/************  Compile Result   ***************************
/*
[2020-04-05 02:18:43 EDT] iverilog '-Wall' design.sv testbench.sv  
&& unbuffer vvp a.out  
VCD info: dumpfile dump.vcd opened for output.
Finding VCD file...
./dump.vcd
[2020-04-05 02:18:43 EDT] Opening EPWave...
Done
*/
